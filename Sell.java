/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import java.util.PriorityQueue;
import java.util.TreeSet;
import javaswing.Stock;
import javaswing.TypeStock;
import javax.swing.table.DefaultTableModel;
import static View.Login.username;
import java.util.Comparator;
import javax.swing.table.TableModel;

public class Sell extends javax.swing.JFrame {
    /**
     * Creates new form Sell
     */
    private static DefaultTableModel defaultTableModel1 = new DefaultTableModel();
    public Sell() {
        initComponents();
        this.AddItemComboBox1();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btn_BackHome = new java.awt.Button();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_ListStock = new javax.swing.JTable();
        txt_Quantity = new java.awt.TextField();
        label3 = new java.awt.Label();
        btn_Sell = new java.awt.Button();
        cb_TypeStock = new javax.swing.JComboBox<>();
        label1 = new java.awt.Label();
        txt_Price = new java.awt.TextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btn_BackHome.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn_BackHome.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btn_BackHome.setLabel("Back Home");
        btn_BackHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_BackHomeActionPerformed(evt);
            }
        });

        tb_ListStock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tb_ListStock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tb_ListStockMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tb_ListStock);

        label3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        label3.setText("Quantity");

        btn_Sell.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        btn_Sell.setLabel("Sell");
        btn_Sell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SellActionPerformed(evt);
            }
        });

        cb_TypeStock.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Cb_ClickActionPerformed(evt);
            }
        });

        label1.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        label1.setText("Price");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(cb_TypeStock, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 14, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btn_Sell, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(label1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_Quantity, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                                    .addComponent(txt_Price, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(28, 28, 28))))
            .addGroup(layout.createSequentialGroup()
                .addComponent(btn_BackHome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btn_BackHome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cb_TypeStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(207, 207, 207)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_Price, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(13, 13, 13)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txt_Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btn_Sell, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_BackHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_BackHomeActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new Home().setVisible(true);
    }//GEN-LAST:event_btn_BackHomeActionPerformed

    private void Cb_ClickActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Cb_ClickActionPerformed
        // TODO add your handling code here:
        String item = (String)cb_TypeStock.getSelectedItem();
        defaultTableModel1.setColumnCount(0);
        defaultTableModel1.setRowCount(0);
        this.AddTableListSell(item);
    }//GEN-LAST:event_Cb_ClickActionPerformed

    private void btn_SellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SellActionPerformed
        // TODO add your handling code here:
        PriorityQueue<Stock> queue = new PriorityQueue<>();
        queue = new Stock().GetPriorityQueueStock();
        for(Stock st : queue){
            String s = st.getName()+"##"+st.getQuantity()+"##"+st.getUsername();
            if(s.equalsIgnoreCase(data)){
                int quantity = Integer.parseInt(txt_Quantity.getText());
               if(quantity > st.getQuantity()){
                   javax.swing.JOptionPane.showMessageDialog(rootPane, "You not enough Quantity of " + st.getName()); 
               }else if(quantity == st.getQuantity()){
                   st.setPrice(Float.parseFloat(txt_Price.getText()));
                   this.DeleteStock(st);
                   this.UpdateListSell(st); 
                   javax.swing.JOptionPane.showMessageDialog(rootPane, "Update Success ListSell" + st.getName()); 
               }else{
                   st.setPrice(Float.parseFloat(txt_Price.getText()));
                   this.UpdateStock(st);
                   this.UpdateListSell(st);
                   javax.swing.JOptionPane.showMessageDialog(rootPane, "Update Success ListSell " + st.getName()); 
                   new BuyAuto().ConditionBuyAuto();
                }
            }
        }
        this.UpdateTable(); 
    }//GEN-LAST:event_btn_SellActionPerformed

    private void tb_ListStockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tb_ListStockMouseClicked
        // TODO add your handling code here:
        // TODO add your handling code here:
         // TODO add your handling code here:
        int index = tb_ListStock.getSelectedRow();
        TableModel model = tb_ListStock.getModel();
        String nameS = model.getValueAt(index,0).toString();
        String quantity = model.getValueAt(index,1).toString();
        data = nameS+"##"+quantity+"##"+username;
        javax.swing.JOptionPane.showMessageDialog(rootPane, "name stock : " + nameS +"\nquantity: "+quantity+"\nusername : "+username);
    }//GEN-LAST:event_tb_ListStockMouseClicked
    private void UpdateStock(Stock st){
        int q = st.getQuantity();
        st.setQuantity(-Integer.parseInt(txt_Quantity.getText()));
        new Stock().UpdateStockSQL(st);
    }
    private void DeleteStock(Stock st){
        new Stock().DeleteStockSQLStock(st);
    }
    private void UpdateListSell(Stock st){
        st.setQuantity(Integer.parseInt(txt_Quantity.getText()));
        new Stock().AddListSellSQL(st);
        
        
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sell.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sell.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sell.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sell.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sell().setVisible(true);
            }
        });
    }
    public void AddItemComboBox1(){
        cb_TypeStock.addItem("All");
        TypeStock st = new TypeStock();
        TreeSet<String> set = new TreeSet<>();
        set = st.TreeSetSQLTypeStock();
        for(String name : set){
           cb_TypeStock.addItem(name); 
        }
    }
    // add table list sell
    public void AddTableListSell(String item){
        Stock st = new Stock();
        PriorityQueue<Stock> queue = new PriorityQueue<>(new CompareNameStock()); 
        queue = st.GetPriorityQueueStock();
        tb_ListStock.setModel(defaultTableModel1);
        defaultTableModel1.addColumn("Name");
        defaultTableModel1.addColumn("Quantity");
        while(queue.size() > 0){
            Stock a = queue.poll();
            if(a.getUsername().equalsIgnoreCase(username)){
                if(item.equalsIgnoreCase("All")){
                    String data1[] = new String[2];
                    data1[0] = a.getName();
                    data1[1] = String.valueOf(a.getQuantity());
                    defaultTableModel1.addRow(data1);  
                }
                if(item.equalsIgnoreCase(a.getName())){
                    String data1[] = new String[2];
                    data1[0] = a.getName();
                    data1[1] = String.valueOf(a.getQuantity());
                    defaultTableModel1.addRow(data1);    
                }
            }
            
        }
    }
    private void UpdateTable(){
        defaultTableModel1.setRowCount(0);
        PriorityQueue<Stock> q1 = new PriorityQueue<>(new CompareIncresePrice()); 
        q1 = new Stock().GetPriorityQueueStock();
        while(q1.size() > 0){
            Stock a = q1.poll();
            if(a.getUsername().equalsIgnoreCase(username)){
                String data1[] = new String[2];
                data1[0] = a.getName();
                data1[1] = String.valueOf(a.getQuantity());
                defaultTableModel1.addRow(data1);    
            }
        }
    }
    

    @Override
    public void pack() {
        super.pack(); //To change body of generated methods, choose Tools | Templates.
    }
    private static String data;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button btn_BackHome;
    private java.awt.Button btn_Sell;
    private javax.swing.JComboBox<String> cb_TypeStock;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Label label1;
    private java.awt.Label label3;
    private javax.swing.JTable tb_ListStock;
    private java.awt.TextField txt_Price;
    private java.awt.TextField txt_Quantity;
    // End of variables declaration//GEN-END:variables
}
class CompareIncresePrice1 implements Comparator<Stock>{
    @Override
    public int compare(Stock s1 , Stock s2){
       if( s1.getPrice() > s2.getPrice()){
          return 1; 
       }else if(s1.getPrice() < s2.getPrice()) return -1 ;
       else return 0;
    }
}
class CompareNameStock implements Comparator<Stock>{
    @Override
    public int compare(Stock s1 , Stock s2){
       return s1.getName().compareTo(s2.getName());
    }
}